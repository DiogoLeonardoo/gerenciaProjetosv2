package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CompromissoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompromissoAllPropertiesEquals(Compromisso expected, Compromisso actual) {
        assertCompromissoAutoGeneratedPropertiesEquals(expected, actual);
        assertCompromissoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompromissoAllUpdatablePropertiesEquals(Compromisso expected, Compromisso actual) {
        assertCompromissoUpdatableFieldsEquals(expected, actual);
        assertCompromissoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompromissoAutoGeneratedPropertiesEquals(Compromisso expected, Compromisso actual) {
        assertThat(expected)
            .as("Verify Compromisso auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompromissoUpdatableFieldsEquals(Compromisso expected, Compromisso actual) {
        assertThat(expected)
            .as("Verify Compromisso relevant properties")
            .satisfies(e -> assertThat(e.getTitulo()).as("check titulo").isEqualTo(actual.getTitulo()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getDataHorario()).as("check dataHorario").isEqualTo(actual.getDataHorario()))
            .satisfies(e -> assertThat(e.getClassificacao()).as("check classificacao").isEqualTo(actual.getClassificacao()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompromissoUpdatableRelationshipsEquals(Compromisso expected, Compromisso actual) {
        // empty method
    }
}
