package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NotificacaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotificacaoAllPropertiesEquals(Notificacao expected, Notificacao actual) {
        assertNotificacaoAutoGeneratedPropertiesEquals(expected, actual);
        assertNotificacaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotificacaoAllUpdatablePropertiesEquals(Notificacao expected, Notificacao actual) {
        assertNotificacaoUpdatableFieldsEquals(expected, actual);
        assertNotificacaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotificacaoAutoGeneratedPropertiesEquals(Notificacao expected, Notificacao actual) {
        assertThat(expected)
            .as("Verify Notificacao auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotificacaoUpdatableFieldsEquals(Notificacao expected, Notificacao actual) {
        assertThat(expected)
            .as("Verify Notificacao relevant properties")
            .satisfies(e -> assertThat(e.getTitulo()).as("check titulo").isEqualTo(actual.getTitulo()))
            .satisfies(e -> assertThat(e.getPrazo()).as("check prazo").isEqualTo(actual.getPrazo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotificacaoUpdatableRelationshipsEquals(Notificacao expected, Notificacao actual) {
        assertThat(expected)
            .as("Verify Notificacao relationships")
            .satisfies(e -> assertThat(e.getCompromisso()).as("check compromisso").isEqualTo(actual.getCompromisso()));
    }
}
